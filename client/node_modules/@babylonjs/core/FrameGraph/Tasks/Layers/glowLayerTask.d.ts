import type { FrameGraph, FrameGraphTextureHandle, Scene, IThinGlowLayerOptions, Camera, FrameGraphObjectList } from "../../../index.js";
import { FrameGraphTask } from "../../frameGraphTask";
import { ThinGlowLayer } from "../../../Layers/thinGlowLayer.js";
/**
 * Task which applies a glowing effect to a texture.
 */
export declare class FrameGraphGlowLayerTask extends FrameGraphTask {
    /**
     * The destination texture to apply the glow layer to.
     * The glow effect will be blended with the contents of this texture.
     */
    destinationTexture: FrameGraphTextureHandle;
    /**
     * The layer texture to render the glow layer to.
     * If not provided, a default texture will be created.
     */
    layerTexture?: FrameGraphTextureHandle;
    private _camera;
    /**
     * Gets or sets the camera used to render the objects to the glow layer.
     */
    get camera(): Camera;
    set camera(camera: Camera);
    /**
     * The list of objects to render to the glow layer.
     */
    objectList: FrameGraphObjectList;
    /**
     * The output texture of the task (same as destinationTexture, but the handle will be different).
     */
    readonly outputTexture: FrameGraphTextureHandle;
    /**
     * The glow layer object. Use this object to update the glow layer properties (e.g. intensity, blur kernel size).
     */
    readonly layer: ThinGlowLayer;
    /**
     * The name of the task.
     */
    get name(): string;
    set name(name: string);
    private readonly _engine;
    private readonly _clearTask;
    private readonly _objectRendererTask;
    private readonly _blurX;
    private readonly _blurY;
    /**
     * Constructs a new glow layer task.
     * @param name Name of the task.
     * @param frameGraph The frame graph this task is associated with.
     * @param scene The scene to render the glow layer in.
     * @param options Options for the glow layer.
     */
    constructor(name: string, frameGraph: FrameGraph, scene: Scene, options?: IThinGlowLayerOptions);
    isReady(): boolean;
    record(): void;
    dispose(): void;
}
